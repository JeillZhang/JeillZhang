{"posts":[{"title":"Halo 安装笔记","text":"部署Docker Compose 方式部署Docker方式部署需先安装docker。 创建容器组 在系统任意位置创建一个文件夹 1mkdir ~/jblogs &amp;&amp; cd ~/jblogs 创建docker-compose.yaml 创建 Halo + MySQL 的实例 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859version: &quot;3&quot;services: halo: image: halohub/halo:2.12 container_name: halo restart: on-failure:3 depends_on: halodb: condition: service_healthy networks: halo_network: volumes: - ./halo2:/root/.halo2 ports: - &quot;8090:8090&quot; healthcheck: test: [&quot;CMD&quot;, &quot;curl&quot;, &quot;-f&quot;, &quot;http://localhost:8090/actuator/health/readiness&quot;] interval: 30s timeout: 5s retries: 5 start_period: 30s command: - --spring.r2dbc.url=r2dbc:pool:mysql://halodb:3306/halo - --spring.r2dbc.username=root # MySQL 的密码，请保证与下方 MYSQL_ROOT_PASSWORD 的变量值一致。 - --spring.r2dbc.password=o#DwN&amp;JSa56 - --spring.sql.init.platform=mysql # 外部访问地址，请根据实际需要修改 - --halo.external-url=http://localhost:8090/ halodb: image: mysql:8.1.0 container_name: halodb restart: on-failure:3 networks: halo_network: command: - --default-authentication-plugin=caching_sha2_password - --character-set-server=utf8mb4 - --collation-server=utf8mb4_general_ci - --explicit_defaults_for_timestamp=true volumes: - ./mysql:/var/lib/mysql - ./mysqlBackup:/data/mysqlBackup ports: - &quot;3306:3306&quot; healthcheck: test: [&quot;CMD&quot;, &quot;mysqladmin&quot;, &quot;ping&quot;, &quot;-h&quot;, &quot;127.0.0.1&quot;, &quot;--silent&quot;] interval: 3s retries: 5 start_period: 30s environment: # 请修改此密码，并对应修改上方 Halo 服务的 SPRING_R2DBC_PASSWORD 变量值 - MYSQL_ROOT_PASSWORD=o#DwN&amp;JSa56 - MYSQL_DATABASE=halonetworks: halo_network: 参数名 描述 spring.r2dbc.url 数据库连接地址，详细可查阅下方的 数据库配置 spring.r2dbc.username 数据库用户名 spring.r2dbc.password 数据库密码 spring.sql.init.platform 数据库平台名称，支持 postgresql、mysql、h2 halo.external-url 外部访问链接，如果需要在公网访问，需要配置为实际访问地址 halo.cache.page.disabled 是否禁用页面缓存，默认为禁用，如需页面缓存可以手动添加此配置，并设置为 false。 开启缓存之后，在登录的情况下不会经过缓存，且默认一个小时会清理掉不活跃的缓存，也可以在 Console 仪表盘的快捷访问中手动清理缓存。 数据库配置： 链接方式 链接地址格式 spring.sql.init.platform PostgreSQL r2dbc:pool:postgresql://{HOST}:{PORT}/{DATABASE} postgresql MySQL r2dbc:pool:mysql://{HOST}:{PORT}/{DATABASE} mysql MariaDB r2dbc:pool:mariadb://{HOST}:{PORT}/{DATABASE} mysql H2 Database r2dbc:h2:file:///${halo.work-dir}/db/halo-next?MODE=MySQL&amp;DB_CLOSE_ON_EXIT=FALSE h2 启动 Halo 服务 1234567# 插件方式安装 compose 使用如下命令docker compose up -d # 启动 Halo 服务docker compose logs -f # 查看日志# 独立安装 compose 使用如下命令docker-compose up -ddocker-compose logs -f 开启防火墙 1sudo firewall-cmd --zone=public --add-port=8090/tcp --permanent 用浏览器访问 /console 即可进入 Halo 管理页面，首次启动会进入初始化页面 反向代理 nginx 1234567891011121314151617upstream halo { server 127.0.0.1:8090;}server { listen 80; listen [::]:80; server_name zjblogs.tech; // zjblogs.tech 修改为对应 IP 或 域名 client_max_body_size 1024m; location / { proxy_pass http://halo; proxy_set_header HOST $host; proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; }}","link":"/2024/02/%E5%AE%89%E8%A3%85/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2024/02/hello-world/"}],"tags":[],"categories":[],"pages":[]}